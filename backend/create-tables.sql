
-- DROP TABLES IF NEEDED
DROP TABLE IF EXISTS AUDIT_WEB_PAGE_VISIT;
DROP TABLE IF EXISTS USER_FILTER_PARAMETER;
DROP TABLE IF EXISTS USERS_FILTERS;
DROP TABLE IF EXISTS POLYGON_PARAMETER_DEFAULT;
DROP TABLE IF EXISTS USER_POLYGON_ACCESS;
DROP TABLE IF EXISTS PARAMETERS;
DROP TABLE IF EXISTS POLYGONS;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS ACCESS_KEYS;

-- USERS TABLE TO KEEP TRACK OF ALL USERS
CREATE TABLE USERS (
    USER_ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    ROLE NVARCHAR(50),
    EMAIL NVARCHAR(255) UNIQUE, 
    FIRST_NAME NVARCHAR(255),
    LAST_NAME NVARCHAR(255),
    DISPLAY_NAME NVARCHAR(255),
    COMPANY NVARCHAR(255),
    LAST_LOGIN DATETIME DEFAULT NULL,
    LAST_LOGIN_LOCATION NVARCHAR(255),
    HASHED_AND_ENCRYPTED_PASSWORD NVARCHAR(255),
    CREATED_BY UNIQUEIDENTIFIER,
    CREATED_AT DATETIME DEFAULT GETDATE(),
    MODIFIED_BY UNIQUEIDENTIFIER,
    MODIFIED_AT DATETIME DEFAULT GETDATE(),
    STATUS NVARCHAR(50) DEFAULT 'PENDING'
);

-- POLYGONS TABLE TO KEEP TRACK OF ALL POLYGONS
CREATE TABLE POLYGONS (
    POLYGON_ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    POLYGON_NAME NVARCHAR(255) UNIQUE,
    POLYGON_MAPPER_ID VARCHAR(255) UNIQUE,
    CREATED_BY UNIQUEIDENTIFIER,
    CREATED_AT DATETIME DEFAULT GETDATE(),
    MODIFIED_BY UNIQUEIDENTIFIER,
    MODIFIED_AT DATETIME DEFAULT GETDATE(),
    STATUS NVARCHAR(50) DEFAULT 'ACTIVE'
);

-- PARAMETERS TABLE TO KEEP TRACK OF ALL PARAMETERS
CREATE TABLE PARAMETERS (
    PARAMETER_ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    PARAMETER_NAME NVARCHAR(255) UNIQUE,
    PARAMETER_UNIT NVARCHAR(50),
    PARAMETER_TYPE NVARCHAR(50),
    CREATED_BY UNIQUEIDENTIFIER,
    CREATED_AT DATETIME DEFAULT GETDATE(),
    MODIFIED_BY UNIQUEIDENTIFIER,
    MODIFIED_AT DATETIME DEFAULT GETDATE(),
    STATUS NVARCHAR(50) DEFAULT 'ACTIVE'
);

-- USER_POLYGON_ACCESS TABLE TO KEEP TRACK OF WHICH USER HAS ACCESS TO WHICH POLYGON
CREATE TABLE POLYGON_ACCESS (
    USER_ID UNIQUEIDENTIFIER,
    POLYGON_ID UNIQUEIDENTIFIER,
    CREATED_BY UNIQUEIDENTIFIER,
    CREATED_AT DATETIME DEFAULT GETDATE(),
    MODIFIED_BY UNIQUEIDENTIFIER,
    MODIFIED_AT DATETIME DEFAULT GETDATE(),
    STATUS NVARCHAR(50),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
    FOREIGN KEY (POLYGON_ID) REFERENCES POLYGONS(POLYGON_ID),
    PRIMARY KEY (USER_ID, POLYGON_ID)
);

-- POLYGON_PARAMETER_DEFAULT TABLE TO KEEP TRACK OF DEFAULT VALUES FOR PARAMETERS FOR A POLYGON
CREATE TABLE POLYGON_PARAMETER_DEFAULT (
    POLYGON_ID UNIQUEIDENTIFIER,
    PARAMETER_ID UNIQUEIDENTIFIER,
    DEFAULT_VALUE NVARCHAR(255),
    CREATED_BY UNIQUEIDENTIFIER,
    CREATED_AT DATETIME DEFAULT GETDATE(),
    MODIFIED_BY UNIQUEIDENTIFIER,
    MODIFIED_AT DATETIME DEFAULT GETDATE(),
    STATUS NVARCHAR(50),
    FOREIGN KEY (POLYGON_ID) REFERENCES POLYGONS(POLYGON_ID),
    FOREIGN KEY (PARAMETER_ID) REFERENCES PARAMETERS(PARAMETER_ID),
    PRIMARY KEY (POLYGON_ID, PARAMETER_ID)
);

-- SAVED_FILTERS TABLE TO KEEP TRACK OF FILTERS CREATED BY USERS
CREATE TABLE SAVED_FILTERS (
    USER_ID UNIQUEIDENTIFIER,
    FILTER_ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    FILTER_NAME NVARCHAR(255),
    CREATED_BY UNIQUEIDENTIFIER,
    CREATED_AT DATETIME DEFAULT GETDATE(),
    MODIFIED_BY UNIQUEIDENTIFIER,
    MODIFIED_AT DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

-- FILTER_PARAMETER_VALUE TABLE TO KEEP TRACK OF FILTER PARAMETERS
CREATE TABLE FILTER_PARAMETER_VALUE (
    FILTER_ID UNIQUEIDENTIFIER,
    PARAMETER_ID UNIQUEIDENTIFIER,
    PARAMETER_VALUE NVARCHAR(255),
    CREATED_BY UNIQUEIDENTIFIER,
    CREATED_AT DATETIME DEFAULT GETDATE(),
    MODIFIED_BY UNIQUEIDENTIFIER,
    MODIFIED_AT DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (FILTER_ID) REFERENCES SAVED_FILTERS(FILTER_ID),
    FOREIGN KEY (PARAMETER_ID) REFERENCES PARAMETERS(PARAMETER_ID),
    PRIMARY KEY (FILTER_ID, PARAMETER_ID) 
);

-- USER_WEB_PAGE_VISIT TABLE TO KEEP TRACK OF USER VISITS
CREATE TABLE AUDIT_WEB_PAGE_VISIT (
    VISIT_ID UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    USER_ID UNIQUEIDENTIFIER,
    URL_TEXT NVARCHAR(1000),
    VISITED_AT DATETIME DEFAULT GETDATE(),
    IP_ADDRESS NVARCHAR(50),
    DURATION INT,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

-- USER_ACCESS_KEYS TABLE TO KEEP TRACK OF USER ACCESS KEYS
CREATE TABLE ACCESS_KEYS (
    USER_ID UNIQUEIDENTIFIER PRIMARY KEY,
    ACCESS_KEY VARCHAR(MAX),
    RSA_PUBLIC_KEY VARCHAR(MAX),
    ROTATED_ON DATETIME DEFAULT GETDATE(),
);

INSERT INTO USERS (
    EMAIL, DISPLAY_NAME, HASHED_AND_ENCRYPTED_PASSWORD, FIRST_NAME, LAST_NAME, COMPANY, 
    ROLE, CREATED_BY, CREATED_AT, MODIFIED_BY, MODIFIED_AT, STATUS
) 
VALUES (
    'venu@hyperworksimaging.com', 
    'Venu Pulagam', 
    'a5140b777a52eb2d2d3903162690b6e4:1c150fcdec96c874cdb091b931381f91e181cdcd37a85943bfe29270fabcd059249abd50f8c7af884c20009c15e7d6514fb65793a932cb123b332f52f3f6468a', 
    'Venu', 
    'Pulagam', 
    'HyperWorks Imaging PVT, LTD., India', 
    'admin', 
    NULL,
    '2025-03-19 11:58:58',
    NULL,
    GETDATE(), 
    'ACTIVE'
);
